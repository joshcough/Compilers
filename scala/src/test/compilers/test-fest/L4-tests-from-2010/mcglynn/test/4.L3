((let ((tmp2 (:hailstone 55))) (print tmp2)) (:even (x) (let ((tmp3 (= x 0))) (if tmp3 1 (let ((tmp4 (- x 1))) (let ((tmp5 (:even tmp4))) (- 1 tmp5)))))) (:half (x) (let ((tmp6 (= x 0))) (if tmp6 0 (let ((tmp7 (- x 2))) (let ((tmp8 (:half tmp7))) (+ 1 tmp8)))))) (:hailstone (n) (let ((tmp1 (print n))) (let ((tmp9 (= n 1))) (if tmp9 1 (let ((tmp10 (:even n))) (if tmp10 (let ((next (:half n))) (:hailstone next)) (let ((tmp11 (* 3 n))) (let ((next (+ 1 tmp11))) (:hailstone next))))))))))
