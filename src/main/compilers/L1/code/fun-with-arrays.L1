((
  (eax <- (allocate 101 3)) ; size 50 array of 1's.
  (edi <- eax) ; save the array pointer in edi
  (ebx <- 50) ; the array index
  (edx <- 1) ; what to put in the array

  ; fill the array backwards so it contains 50 -> 1
  :filler

  (ecx <- ebx) ; save the current index in ecx
  (ecx *= 4) ; times by 4 for the real array position
  (ecx += edi) ; add in the base pointer 
  (esi <- edx) ; encode edx in esi
  (esi *= 2)
  (esi += 1)
  ((mem ecx 0) <- esi)

  (ebx -= 1)
  (edx += 1)
  (cjump ebx < 1 :printer :end)

  ; then print out each item.
  :printer
  (eax <- (print edi)) 
))
